{"version":3,"sources":["components/darkmode/darkmode.js","components/navbar/LoginSetup.js","cadence/transactions/setup_user.js","components/navbar/tillieslogonew.png","components/navbar/NavBar.js","components/home/hero/Hero.js","components/cards/comments/Comments.js","components/cards/Cards.js","components/home/Home.js","Collection.js","cadence/scripts/get_nfts.js","SaleCollection.js","cadence/scripts/get_sale_nfts.js","cadence/transactions/purchase.js","components/profile/market/Market.js","components/profile/Profile.js","components/marketplace/MarketPlace.js","components/list/List.js","cadence/transactions/mint_nft.js","components/Error.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["DarkMode","theme","clickedClass","body","document","lightTheme","darkTheme","classList","add","class","type","className","id","onClick","e","replace","target","remove","switchTheme","fcl","put","LoginSetup","useState","setUser","useEffect","subscribe","setupUser","a","then","transactionId","console","log","onceSealed","NavBar","user","Navbar","expand","Container","Brand","href","src","logo","alt","Toggle","Collapse","addr","Nav","to","Link","Dropdown","align","variant","icon","faUserCircle","Menu","ItemText","Hero","Row","Col","sm","Comments","show","setShow","handleClose","Button","faComments","Modal","onHide","Header","closeButton","Title","Body","Footer","Cards","NFTs","map","l","Card","style","width","Img","process","image","title","Text","price","faHeart","Home","Collection","props","nfts","setNFTs","getUserNFTs","addUser","address","t","result","backgroundColor","nft","ipfsHash","metadata","name","SaleCollection","getUserSaleNFTs","purchase","parseInt","Object","keys","nftID","nftRef","Market","setAddress","officialAddress","setOfficialAddress","onChange","value","Profile","MarketPlace","client","create","List","setName","setId","setPrice","file","setFile","setDescription","forSale","setForSale","axiosConfig","headers","Axios","get","res","data","description","catch","err","params","mint","added","hash","path","files","post","Error","faGithub","faLinkedin","App","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d81d687.chunk.js","sourcesContent":["import React from 'react';\nimport './darkmode.css';\n\nconst DarkMode = () => {\n  let clickedClass = 'clicked';\n  const body = document.body;\n  const lightTheme = 'dark';\n  const darkTheme = 'light';\n  let theme;\n\n  //if (localStorage) {\n  //theme = localStorage.getItem('theme');\n  //}\n\n  if (theme === lightTheme || theme === darkTheme) {\n    body.classList.add(theme);\n  } else {\n    body.classList.add(lightTheme);\n  }\n\n  const switchTheme = (e) => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.remove(clickedClass);\n      theme = lightTheme;\n    } else {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.add(clickedClass);\n      theme = darkTheme;\n    }\n  };\n\n  return (\n    <label class='switch'>\n      <input\n        type='checkbox'\n        className={theme === 'light' ? clickedClass : ''}\n        id='darkMode'\n        onClick={(e) => switchTheme(e)}\n      />\n      <span class='slider round'></span>\n    </label>\n  );\n};\n\nexport default DarkMode;\n","// imports\nimport './NavBar.css';\nimport * as fcl from '@onflow/fcl';\nimport { useState, useEffect } from 'react';\nimport { setupUserTx } from '../../cadence/transactions/setup_user.js';\n\nfcl\n  .config()\n  .put('accessNode.api', 'https://access-testnet.onflow.org')\n  .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n\nfunction LoginSetup() {\n  const [users, setUser] = useState([]);\n\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, []);\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n  };\n\n  // This sets up a user. This is creating their account address where they will create and store\n  //their blockchain items\n  const setupUser = async () => {\n    const transactionId = await fcl\n      .send([\n        fcl.transaction(setupUserTx),\n        fcl.args([]),\n        fcl.payer(fcl.authz),\n        fcl.proposer(fcl.authz),\n        fcl.authorizations([fcl.authz]),\n        fcl.limit(9999),\n      ])\n      .then(fcl.decode);\n\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  };\n  return (\n    <div className='loginbutton'>\n      <button onClick={() => setupUser()}>Setup User</button>\n    </div>\n  );\n}\n\nexport default LoginSetup;\n","export const setupUserTx = `\nimport MyNFT from 0x77843dcd06310709\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport FungibleToken from 0x9a0766d93b6608b7\nimport FlowToken from 0x7e60df042a9c0868\nimport NFTMarketplace from 0x77843dcd06310709\n\ntransaction {\n\n  prepare(acct: AuthAccount) {\n    acct.save(<- MyNFT.createEmptyCollection(), to: /storage/TestCollection)\n    acct.link<&MyNFT.Collection{MyNFT.CollectionPublic, NonFungibleToken.CollectionPublic}>(/public/TestCollection, target: /storage/TestCollection)\n    acct.link<&MyNFT.Collection>(/private/TestCollection, target: /storage/TestCollection)\n    \n    let TestCollection = acct.getCapability<&MyNFT.Collection>(/private/TestCollection)\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\n\n    acct.save(<- NFTMarketplace.createSaleCollection(MyNFTCollection: TestCollection, FlowTokenVault: FlowTokenVault), to: /storage/TestSaleCollection)\n    acct.link<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>(/public/TestSaleCollection, target: /storage/TestSaleCollection)\n  }\n\n  execute {\n    log(\"A user stored a Collection and a SaleCollection inside their account\")\n  }\n}\n\n`","export default __webpack_public_path__ + \"static/media/tillieslogonew.25089572.png\";","// imports\nimport './NavBar.css';\nimport React from 'react';\nimport * as fcl from '@onflow/fcl';\nimport { useState, useEffect } from 'react';\nimport { Navbar, Nav, Container, Dropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport DarkMode from '../darkmode/darkmode';\nimport LoginSetup from './LoginSetup';\nimport logo from '../navbar/tillieslogonew.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n\nfcl\n  .config()\n  .put('accessNode.api', 'https://access-testnet.onflow.org')\n  .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n\nexport default function NavBar() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, []);\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n    console.log(\"Im here\")\n  };\n\n  return (\n    <>\n      <Navbar expand='lg'>\n        <Container>\n          <Navbar.Brand href='/'>\n            <img src={logo} alt='Tillies Logo'></img>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n          <h1>Account address: {user && user.addr ? user.addr : ''}</h1>\n            <Nav className='me-auto'>\n              <LinkContainer to='/'>\n                <Nav.Link to='/'>Home</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/marketplace'>\n                <Nav.Link to='/marketplace'>Marketplace</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/list'>\n                <Nav.Link to='/list'>List an NFT</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/profile'>\n                <Nav.Link to='/profile'>Profile</Nav.Link>\n              </LinkContainer>\n            </Nav>\n            <Dropdown className='dropdown' align='end'>\n              <Dropdown.Toggle variant='dark' id='dropdown-basic'>\n                <FontAwesomeIcon icon={faUserCircle} />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <div className='menu'>\n                  <Dropdown.ItemText>\n                    {' '}\n                    <button onClick={() => logIn()}>Log In</button>\n                  </Dropdown.ItemText>\n                  <Dropdown.ItemText>\n                    <button onClick={() => fcl.unauthenticate()}>\n                      Log Out\n                    </button>\n                  </Dropdown.ItemText>\n                  <Dropdown.ItemText>\n                    {' '}\n                    <LoginSetup />\n                  </Dropdown.ItemText>\n                </div>\n              </Dropdown.Menu>\n            </Dropdown>\n            <div className='toggle'>\n              <DarkMode />\n            </div>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n","// imports\nimport './Hero.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport default function Hero() {\n  return (\n    <div class='jumbotron'>\n      <Container>\n        <Row>\n          <Col sm={8} className='text'>\n            <h1>Welcome to TiLLiES Marketplace</h1>\n            <p>The only NFT marketplace run by the community.</p>\n            <button id='market-link'>\n              <LinkContainer to='/marketplace'>\n                <Nav.Link to='/marketplace'>Market</Nav.Link>\n              </LinkContainer>\n            </button>\n          </Col>\n          <Col sm={4} className='image'>\n            <img\n              src='https://www.creativityculturecapital.org/wp-content/uploads/2021/09/22_Diego_Balan_Web-942x1024.png'\n              alt='NFT'\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","//imports\nimport { Modal, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Comments() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant='primary' onClick={handleShow}>\n        <FontAwesomeIcon icon={faComments} />\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant='primary' onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","//imports\nimport NFTs from './data.json';\nimport './Cards.css';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faComments } from '@fortawesome/free-solid-svg-icons';\nimport Comments from './comments/Comments';\n\nexport default function Cards() {\n  return (\n    <div className='Cards'>\n      {NFTs.map((l) => (\n        <Card style={{ width: '18rem' }}>\n          <Card.Img\n            variant='top'\n            src={process.env.PUBLIC_URL + '/images/' + l.image}\n            alt='card'\n            className=\"cardImg\"\n          />\n          <Card.Body>\n            <Card.Title>{l.title}</Card.Title>\n            <Card.Text>{l.price}</Card.Text>\n            <Button variant='primary'>\n              <FontAwesomeIcon icon={faHeart} />\n            </Button>\n            <Comments />\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport '../../App.css';\nimport Hero from './hero/Hero';\nimport Cards from '../cards/Cards';\n\nfunction Home() {\n    return (\n        <div className=\"Home\">\n            <Hero />\n            <Cards />\n        </div>\n        \n    )\n}\n\nexport default Home;","import './App.css';\n\nimport * as fcl from '@onflow/fcl';\nimport * as t from '@onflow/types';\nimport { useState, useEffect } from 'react';\nimport { getNFTsScript } from './cadence/scripts/get_nfts.js';\n\nfunction Collection(props) {\n  const [nfts, setNFTs] = useState([]);\n  const [user, setUser] = useState();\n\n    useEffect(() => {\n    getUserNFTs();\n    addUser();\n  }, []);\n\n  const getUserNFTs = async () => {\n    const result = await fcl\n      .send([\n        fcl.script(getNFTsScript),\n        fcl.args([fcl.arg(props.address, t.Address)]),\n      ])\n      .then(fcl.decode);\n\n    console.log(result);\n    setNFTs(result);\n  };\n\n  const addUser = async () => {\n    \n  }\n\n  return (\n    <div style={{ backgroundColor: 'lightgreen' }}>\n      {nfts.map((nft) => (\n        <div key={nft.id}>\n          <h1>{nft.id}</h1>\n          <img\n            style={{ width: '100px' }}\n            src={`https://ipfs.infura.io/ipfs/${nft.ipfsHash}`}\n          />\n          <h1>{nft.metadata.name}</h1>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Collection;\n","export const getNFTsScript = `\nimport MyNFT from 0x77843dcd06310709\nimport NonFungibleToken from 0x631e88ae7f1d7c20\n\npub fun main(account: Address): [&MyNFT.NFT] {\n  let collection = getAccount(account).getCapability(/public/TestCollection)\n                    .borrow<&MyNFT.Collection{NonFungibleToken.CollectionPublic, MyNFT.CollectionPublic}>()\n                    ?? panic(\"Can't get the User's collection.\")\n\n  let returnVals: [&MyNFT.NFT] = []\n\n  let ids = collection.getIDs()\n  for id in ids {\n    returnVals.append(collection.borrowEntireNFT(id: id))\n  }\n\n  return returnVals\n}\n`\n\n\n\n","import './App.css';\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport {useState, useEffect} from 'react';\nimport {getSaleNFTsScript} from \"./cadence/scripts/get_sale_nfts\";\nimport {purchaseTx} from \"./cadence/transactions/purchase.js\";\n\nfunction SaleCollection(props) {\n  const [nfts, setNFTs] = useState([]);\n\n  useEffect(() => {\n    getUserSaleNFTs();\n  }, [])\n\n  const getUserSaleNFTs = async () => {\n      const result = await fcl.send([\n          fcl.script(getSaleNFTsScript),\n          fcl.args([\n              fcl.arg(props.address, t.Address)\n          ])\n      ]).then(fcl.decode);\n\n      console.log(result);\n      setNFTs(result);\n  }\n\n  const purchase = async (id) => {\n    const transactionId = await fcl.send([\n        fcl.transaction(purchaseTx),\n        fcl.args([\n          fcl.arg(props.address, t.Address),\n          fcl.arg(parseInt(id), t.UInt64)\n        ]),\n        fcl.payer(fcl.authz),\n        fcl.proposer(fcl.authz),\n        fcl.authorizations([fcl.authz]),\n        fcl.limit(9999)\n      ]).then(fcl.decode);\n  \n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n  }\n \n  return (\n    <div style={{backgroundColor: 'lightblue'}}>\n      {Object.keys(nfts).map(nftID => (\n          <div key={nftID}>\n              <h1>Price: {nfts[nftID].price}</h1>\n              <h1>{nftID}</h1>\n              <img style={{width: \"100px\"}} src={`https://ipfs.infura.io/ipfs/${nfts[nftID].nftRef.ipfsHash}`} />\n              <h1>{nfts[nftID].nftRef.metadata.name}</h1>\n              <button onClick={() => purchase(nftID)}>Purchase this NFT</button>\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default SaleCollection;","export const getSaleNFTsScript = `\nimport MyNFT from 0x77843dcd06310709\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport NFTMarketplace from 0x77843dcd06310709\n\npub fun main(account: Address): {UInt64: NFTMarketplace.SaleItem} {\n  let saleCollection = getAccount(account).getCapability(/public/TestSaleCollection)\n                        .borrow<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>()\n                        ?? panic(\"Could not borrow the user's SaleCollection\")\n\n  let collection = getAccount(account).getCapability(/public/TestCollection) \n                    .borrow<&MyNFT.Collection{NonFungibleToken.CollectionPublic, MyNFT.CollectionPublic}>()\n                    ?? panic(\"Can't get the User's collection.\")\n\n  let saleIDs = saleCollection.getIDs()\n\n  let returnVals: {UInt64: NFTMarketplace.SaleItem} = {}\n\n  for saleID in saleIDs {\n    let price = saleCollection.getPrice(id: saleID)\n    let nftRef = collection.borrowEntireNFT(id: saleID)\n\n    returnVals.insert(key: nftRef.id, NFTMarketplace.SaleItem(_price: price, _nftRef: nftRef))\n  }\n\n  return returnVals\n}\n`","export const purchaseTx = `\nimport MyNFT from 0x77843dcd06310709\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport NFTMarketplace from 0x77843dcd06310709\nimport FlowToken from 0x7e60df042a9c0868\n\ntransaction(account: Address, id: UInt64) {\n\n  prepare(acct: AuthAccount) {\n    let saleCollection = getAccount(account).getCapability(/public/TestSaleCollection)\n                        .borrow<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>()\n                        ?? panic(\"Could not borrow the user's SaleCollection\")\n\n    let recipientCollection = getAccount(acct.address).getCapability(/public/TestCollection) \n                    .borrow<&MyNFT.Collection{NonFungibleToken.CollectionPublic}>()\n                    ?? panic(\"Can't get the User's collection.\")\n\n    let price = saleCollection.getPrice(id: id)\n\n    let payment <- acct.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault)!.withdraw(amount: price) as! @FlowToken.Vault\n\n    saleCollection.purchase(id: id, recipientCollection: recipientCollection, payment: <- payment)\n  }\n\n  execute {\n    log(\"A user purchased an NFT\")\n  }\n}\n\n`","import React from 'react';\nimport Collection from '../../../Collection';\nimport SaleCollection from '../../../SaleCollection';\nimport * as fcl from '@onflow/fcl';\nimport { useState, useEffect } from 'react';\n\nfcl\n  .config()\n  .put('accessNode.api', 'https://access-testnet.onflow.org')\n  .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n\nfunction Market() {\n    const [address, setAddress] = useState();\n    const [officialAddress, setOfficialAddress] = useState('');\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, []);\n\n    console.log(<Collection address={officialAddress}></Collection>);\n    return (\n        <>\n        <div>\n            <h1>Search Page</h1>\n        </div>\n        <div>\n            <input type='text' onChange={(e) => setAddress(e.target.value)} />\n            <button onClick={() => setOfficialAddress(address)}>Search</button>\n        </div>\n\n        { user && user.addr && officialAddress && officialAddress !== ''\n        ?\n        <Collection address={officialAddress}></Collection>\n        :\n        null\n      }\n\n      { user && user.addr && officialAddress && officialAddress !== ''\n      ?\n      <SaleCollection address={officialAddress}></SaleCollection>\n      :\n      null\n      }\n        </>\n    )\n}\n\nexport default Market;","import React from 'react';\nimport './Profile.css';\nimport Market from './market/Market';\n\nfunction Profile() {\n    return (\n        <div>\n            <h1>Profile Page</h1>\n            <Market />\n        </div>\n        \n    )\n}\n\nexport default Profile;","import React from 'react';\nimport './MarketPlace.css';\nimport Market from '../profile/market/Market';\nimport Cards from '../cards/Cards';\n\nfunction MarketPlace() {\n  return (\n    <div className='marketplace'>\n      <h1>MarketPlace</h1>\n      <Market />\n      <Cards />\n    </div>\n  );\n}\n\nexport default MarketPlace;\n","import {useEffect, useState} from 'react';\nimport './List.css';\nimport Axios from 'axios';\nimport * as fcl from '@onflow/fcl';\nimport * as t from '@onflow/types';\nimport { create } from 'ipfs-http-client';\nimport { mintNFT } from '../../cadence/transactions/mint_nft.js';\n// import Mint from './Mint.js';\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfcl\n  .config()\n  .put('accessNode.api', 'https://access-testnet.onflow.org')\n  .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n\nfunction List() {\n\n  const [name, setName] = useState('')\n  const [id, setId] = useState(0)\n  const [price, setPrice] = useState(0)\n  const [file, setFile] = useState()\n  const [description, setDescription] = useState('')\n  const [forSale, setForSale] = useState(false)\n  \n  let axiosConfig = {\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n    }\n  };\n//experimental read route\n  useEffect(() => {\n    Axios.get('http://localhost:3001/read', axiosConfig)\n    .then(res => {\n      console.log(res.data)\n      setName(res.data[0].name)\n      setId(res.data[0].id)\n      setPrice(res.data[0].price)\n      setDescription(res.data[0].description)\n      setForSale(res.data[0].forSale)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  const addNft = () => {  \n    Axios.post('http://localhost:3001/insert', {\n      name: name,\n      id: id,\n      price: price,\n      forSale: forSale\n    }, axiosConfig)\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/insert', {\n      params: { name: name, id: id, price: price, forSale: forSale }  \n      //params: {name: name, id: id, price: price, description: description, forSale: forSale}\n}\n).then(res => {\n    console.log(res)\n} )\n    \n})\n\nconst mint = async () => {\n\n    try {\n      const added = await client.add(file);\n      const hash = added.path;\n\n      const transactionId = await fcl\n        .send([\n          fcl.transaction(mintNFT),\n          fcl.args([fcl.arg(hash, t.String), fcl.arg(name, t.String)]),\n          fcl.payer(fcl.authz),\n          fcl.proposer(fcl.authz),\n          fcl.authorizations([fcl.authz]),\n          fcl.limit(9999),\n        ])\n        .then(fcl.decode);\n\n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    }\n  };\n  return (\n    <div className='list'>\n      <label>Name:</label>\n      <input type='text' onChange={(e) => {\n        setName(e.target.value)\n      }} />\n      <label>Id:</label>\n      <input type='number' onChange={(e) => {\n        setId(e.target.value)\n      }} />\n      <label>Filename:</label>\n       <input type='file' onChange={(e) => setFile(e.target.files[0])} />\n      <label>price:</label>\n      <input type='number' onChange={(e) => {\n        setPrice(e.target.value)\n      }} />\n      <button onClick={() => {addNft(); mint();}}>List NFT</button>\n    </div>\n  );\n}\n\nexport default List;","export const mintNFT = `\nimport MyNFT from 0x77843dcd06310709\n\ntransaction(ipfsHash: String, name: String) {\n\n  prepare(acct: AuthAccount) {\n    let collection = acct.borrow<&MyNFT.Collection>(from: /storage/TestCollection)\n                        ?? panic(\"This collection does not exist here\")\n\n    let nft <- MyNFT.createToken(ipfsHash: ipfsHash, metadata: {\"name\": name})\n\n    collection.deposit(token: <- nft)\n  }\n\n  execute {\n    log(\"A user minted an NFT into their account\")\n  }\n}\n`","import React from \"react\"\n\nfunction Error() {\n  return <h1>Page not found!</h1>\n};\n\nexport default Error","import './footer.css';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nfunction Footer() {\n  return (\n    <div className='footer'>\n      <div class='footer p-4'>\n        &copy; TiLLiES 2022\n        <a\n          className='gh'\n          href='https://github.com/brianross93/tilliesnftmarketplace'\n          target='blank'>\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a\n          href='https://www.linkedin.com/company/tillies/about/'\n          target='blank'>\n          <FontAwesomeIcon icon={faLinkedin} />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","// imports\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/navbar/NavBar';\nimport Home from './components/home/Home';\nimport Profile from './components/profile/Profile';\nimport MarketPlace from './components/marketplace/MarketPlace';\nimport List from './components/list/List';\nimport Error from './components/Error';\nimport Footer from './components/footer/footer';\n\n\n\nexport default function App() {\n  return (\n    <div className='App'>\n      <NavBar />\n      <Routes>\n        <Route path='/' element={<Home />} exact></Route>\n        <Route path='/profile' element={<Profile />}></Route>\n        <Route path='/marketplace' element={<MarketPlace />}></Route>\n        <Route path='/list' element={<List />}></Route>\n        <Route element={<Error />}></Route>\n       \n       \n        \n  \n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}